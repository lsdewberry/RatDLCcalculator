maxHTy=NaN(size(output,2),1);
df=NaN(size(output,2),1);
stridelength = NaN(size(output,2),1);
toeProm = NaN(size(output,2),1);
heelProm = NaN(size(output,2),1);
stepwidth = NaN(size(output,2),1);
avgV = NaN(size(output,2),1);
FootAngleToeOff= NaN(size(output,2),1);
stanceDuration= NaN(size(output,2),1);
for i=1:length(output)
    try
    %output(i).velocity =  ( abs(gradient(output(i).N.x.avg)) ./ output(i).pixpercm ) ./ (gradient(output(i).N.f.avg) ./500);
    %%output(i).velocityB =  ( abs(gradient(output(i).B.x.avg)) ./ output(i).pixpercm ) ./ (gradient(output(i).B.f.avg) ./500);
    %output(i).velocitystd = std(output(i).velocity);
    output(i).velocity =  ( abs(gradient(output(i).N.x.avg)) ) ./ (gradient(output(i).N.f.avg));%pixels per frame
    table(i).avgVnose = mean(output(i).velocity);
    output(i).velocityBac =  ( abs(gradient(output(i).B.x.avg)) ) ./ (gradient(output(i).B.f.avg));%pixels per frame
    table(i).avgVback = mean(output(i).velocity);
         %velocity = (Nx(end)-Nx(1))/pixeltocm; %distance in pixels*cm/pix = cm
         %velocity = velocity/((Nf(end)-Nf(1))/framestosecs); %cm/ frames*s/frames=s)->cm/s

    table(i).maxHTy = max(output(i).HT.y.avg);
    %output(i).Hstridelength=output(i).Hstridelength.avg/output(i).pixpercm;
    
    table(i).df = output(i).Hdutyfactor.avg;
    table(i).stridelength = output(i).Hstridelength.avg;
    table(i).toeProm = output(i).ToeProminance.avg;
    table(i).heelProm = output(i).HeelProminance.avg;
    table(i).FootAngleToeOff = output(i).FootAngleToeOff.avg; 
    table(i).stanceDuration = output(i).stanceDuration.avg; 
    if output(i).stepwidth.variability<.5*output(i).stepwidth.avg
        table(i).stepwidth = output(i).stepwidth.avg;
    else
        table(i).stepwidth = NaN;
    end
    end
end
%% velocity
%VARx table
for i=1:length(output)
    try
    mylength(i)=length(output(i).velocity);
    end
end
mylength=max(mylength);
varx=nan(length(output),mylength);
for i=1:length(output)
    try
    myvel=output(i).velocity;
    varx(i,1:length(myvel))=myvel;
    end
end
%filename = 'gait3_1.xlsx';
%writematrix(varx,filename,'Sheet',2)    
%VARf table
for i=1:length(output)
    try
    mylength(i)=length(output(i).N.f.avg);
    end
end
mylength=max(mylength);
varf=nan(length(output),mylength);
for i=1:length(output)
    try
    myvel=output(i).N.f.avg;
    varf(i,1:length(myvel))=myvel;
    end
end
%writematrix(varf,filename,'Sheet',3)  
%% var of interest

%VARx table
for i=1:length(output)
    try
    mylength(i)=length(output(i).B.x.avg);
    end
end
mylength=max(mylength);
varx=nan(length(output),mylength);
for i=1:length(output)
    try
    myvel=output(i).B.x.avg;
    varx(i,1:length(myvel))=myvel;%/output(i).pixpercm;
    end
end
%writematrix(varx,filename,'Sheet',4)  

%VARy table
for i=1:length(output)
    try
    mylength(i)=length(output(i).HT_TB.y.avg);
    end
end
mylength=max(mylength);
vary=nan(length(output),mylength);
for i=1:length(output)
    try
    myvel=output(i).HT_TB.y.avg;
    vary(i,1:length(myvel))=myvel;%/output(i).pixpercm;
    end
end
%writematrix(vary,filename,'Sheet',5)

%VARf table
for i=1:length(output)
    try
    mylength(i)=length(output(i).HT_TB.f.avg);
    end
end
mylength=max(mylength);
varf=nan(length(output),mylength);
for i=1:length(output)
    try
    myvel=output(i).HT_TB.f.avg;
    varf(i,1:length(myvel))=myvel;
    end
end
%writematrix(varf,filename,'Sheet',6)  